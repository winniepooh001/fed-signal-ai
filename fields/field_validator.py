"""
TradingView Field Validator
Auto-generated from TradingView documentation

Usage:
    from field_validator import validate_field, get_field_type, VALID_FIELDS

    if validate_field('close'):
        print("Valid field")

    field_type = get_field_type('volume')
    print(f"Volume field type: {field_type}")
"""

from typing import Optional, Set, Dict, List

# All valid TradingView fields grouped by type
FIELDS_BY_TYPE: Dict[str, List[str]] = {
    "boolean": [
        "active_symbol",
        "is_blacklisted",
        "is_primary",
        "is_shariah_compliant",
    ],
    "fundamental_price": [
        "amount_recent",
        "amount_upcoming",
        "aum",
        "basic_eps_net_income",
        "book_value_per_share_fq",
        "book_value_per_share_fy",
        "buyback_yield",
        "capital_expenditures_ttm",
        "cash_f_financing_activities_ttm",
        "cash_f_investing_activities_ttm",
        "cash_f_operating_activities_ttm",
        "cash_n_equivalents_fq",
        "cash_n_equivalents_fy",
        "cash_n_short_term_invest_fq",
        "cash_n_short_term_invest_fy",
        "diluted_shares_outstanding_fq",
        "dividend_amount_recent",
        "dividend_amount_upcoming",
        "dividends_paid",
        "dividends_per_share_fq",
        "dps_common_stock_prim_issue_fq",
        "dps_common_stock_prim_issue_fy",
        "earnings_per_share_basic_fy",
        "earnings_per_share_basic_ttm",
        "earnings_per_share_diluted_fq",
        "earnings_per_share_diluted_fy",
        "earnings_per_share_diluted_ttm",
        "earnings_per_share_forecast_fq",
        "earnings_per_share_forecast_next_fq",
        "earnings_per_share_forecast_next_fy",
        "earnings_per_share_fq",
        "earnings_per_share_fy",
        "ebit_ttm",
        "ebitda",
        "ebitda_fy",
        "ebitda_per_employee_fy",
        "ebitda_ttm",
        "enterprise_value_current",
        "enterprise_value_fq",
        "eps_surprise_fq",
        "free_cash_flow",
        "free_cash_flow_fq",
        "free_cash_flow_fy",
        "free_cash_flow_per_employee_fy",
        "free_cash_flow_ttm",
        "fund_flows.1M",
        "fund_flows.1Y",
        "fund_flows.3M",
        "fund_flows.3Y",
        "fund_flows.5Y",
        "fund_flows.YTD",
        "goodwill",
        "goodwill_fq",
        "gross_profit",
        "gross_profit_fq",
        "gross_profit_fy",
        "gross_profit_ttm",
        "indicated_annual_dividend",
        "issuance_of_stock_net_ttm",
        "last_annual_eps",
        "last_annual_revenue",
        "market_cap_basic",
        "nav",
        "net_debt",
        "net_debt_fq",
        "net_income",
        "net_income_bef_disc_oper_fy",
        "net_income_fy",
        "net_income_per_employee_fy",
        "net_income_ttm",
        "oper_income_fy",
        "oper_income_per_employee_fy",
        "oper_income_ttm",
        "research_and_dev_fy",
        "research_and_dev_per_employee_fy",
        "research_and_dev_ttm",
        "revenue_forecast_fq",
        "revenue_forecast_next_fq",
        "revenue_fq",
        "revenue_per_employee",
        "revenue_per_employee_fy",
        "revenue_per_share_fy",
        "revenue_per_share_ttm",
        "revenue_surprise_fq",
        "sell_gen_admin_exp_other_fy",
        "sell_gen_admin_exp_other_ttm",
        "shrhldrs_equity_fq",
        "shrhldrs_equity_fy",
        "sum_for_enterprise_value",
        "total_assets",
        "total_assets_fq",
        "total_assets_fy",
        "total_assets_per_employee_fy",
        "total_cash_dividends_paid_fy",
        "total_current_assets",
        "total_current_assets_fq",
        "total_current_liabilities_fq",
        "total_current_liabilities_fy",
        "total_debt",
        "total_debt_fq",
        "total_debt_fy",
        "total_debt_per_employee_fy",
        "total_equity_fq",
        "total_liabilities_fq",
        "total_liabilities_fy",
        "total_revenue",
        "total_revenue_fy",
        "total_revenue_ttm",
        "working_capital_fq",
    ],
    "map": [
        "rates_cf",
        "rates_current",
        "rates_dividend_recent",
        "rates_dividend_upcoming",
        "rates_earnings_fq",
        "rates_earnings_next_fq",
        "rates_fh",
        "rates_fq",
        "rates_fy",
        "rates_mc",
        "rates_pt",
        "rates_time_series",
        "rates_ttm",
    ],
    "number": [
        "ADRADRADR|1ADR|5ADR|15ADR|30ADR|60ADR|120ADR|240ADR|1WADR|1M",
        "ADRPADRPADRP|1ADRP|5ADRP|15ADRP|30ADRP|60ADRP|120ADRP|240ADRP|1WADRP|1M",
        "ADX+DIADX+DIADX+DI|1ADX+DI|5ADX+DI|15ADX+DI|30ADX+DI|60ADX+DI|120ADX+DI|240ADX+DI|1WADX+DI|1M",
        "ADX+DI[1]ADX+DI[1]ADX+DI[1]|1ADX+DI[1]|5ADX+DI[1]|15ADX+DI[1]|30ADX+DI[1]|60ADX+DI[1]|120ADX+DI[1]|240ADX+DI[1]|1WADX+DI[1]|1M",
        "ADX+DI_100ADX+DI_100|1ADX+DI_100|5ADX+DI_100|15ADX+DI_100|30ADX+DI_100|60ADX+DI_100|120ADX+DI_100|240ADX+DI_100|1WADX+DI_100|1MADX+DI_100",
        "ADX+DI_100[1]ADX+DI_100[1]ADX+DI_100[1]|1ADX+DI_100[1]|5ADX+DI_100[1]|15ADX+DI_100[1]|30ADX+DI_100[1]|60ADX+DI_100[1]|120ADX+DI_100[1]|240ADX+DI_100[1]|1WADX+DI_100[1]|1M",
        "ADX+DI_20ADX+DI_20ADX+DI_20|1ADX+DI_20|5ADX+DI_20|15ADX+DI_20|30ADX+DI_20|60ADX+DI_20|120ADX+DI_20|240ADX+DI_20|1WADX+DI_20|1M",
        "ADX+DI_20[1]ADX+DI_20[1]ADX+DI_20[1]|1ADX+DI_20[1]|5ADX+DI_20[1]|15ADX+DI_20[1]|30ADX+DI_20[1]|60ADX+DI_20[1]|120ADX+DI_20[1]|240ADX+DI_20[1]|1WADX+DI_20[1]|1M",
        "ADX+DI_50ADX+DI_50ADX+DI_50|1ADX+DI_50|5ADX+DI_50|15ADX+DI_50|30ADX+DI_50|60ADX+DI_50|120ADX+DI_50|240ADX+DI_50|1WADX+DI_50|1M",
        "ADX+DI_50[1]ADX+DI_50[1]ADX+DI_50[1]|1ADX+DI_50[1]|5ADX+DI_50[1]|15ADX+DI_50[1]|30ADX+DI_50[1]|60ADX+DI_50[1]|120ADX+DI_50[1]|240ADX+DI_50[1]|1WADX+DI_50[1]|1M",
        "ADX+DI_9ADX+DI_9ADX+DI_9|1ADX+DI_9|5ADX+DI_9|15ADX+DI_9|30ADX+DI_9|60ADX+DI_9|120ADX+DI_9|240ADX+DI_9|1WADX+DI_9|1M",
        "ADX+DI_9[1]ADX+DI_9[1]ADX+DI_9[1]|1ADX+DI_9[1]|5ADX+DI_9[1]|15ADX+DI_9[1]|30ADX+DI_9[1]|60ADX+DI_9[1]|120ADX+DI_9[1]|240ADX+DI_9[1]|1WADX+DI_9[1]|1M",
        "ADX-DIADX-DIADX-DI|1ADX-DI|5ADX-DI|15ADX-DI|30ADX-DI|60ADX-DI|120ADX-DI|240ADX-DI|1WADX-DI|1M",
        "ADX-DI[1]ADX-DI[1]ADX-DI[1]|1ADX-DI[1]|5ADX-DI[1]|15ADX-DI[1]|30ADX-DI[1]|60ADX-DI[1]|120ADX-DI[1]|240ADX-DI[1]|1WADX-DI[1]|1M",
        "ADX-DI_100ADX-DI_100|1ADX-DI_100|5ADX-DI_100|15ADX-DI_100|30ADX-DI_100|60ADX-DI_100|120ADX-DI_100|240ADX-DI_100|1WADX-DI_100|1MADX-DI_100",
        "ADX-DI_100[1]ADX-DI_100[1]ADX-DI_100[1]|1ADX-DI_100[1]|5ADX-DI_100[1]|15ADX-DI_100[1]|30ADX-DI_100[1]|60ADX-DI_100[1]|120ADX-DI_100[1]|240ADX-DI_100[1]|1WADX-DI_100[1]|1M",
        "ADX-DI_20ADX-DI_20ADX-DI_20|1ADX-DI_20|5ADX-DI_20|15ADX-DI_20|30ADX-DI_20|60ADX-DI_20|120ADX-DI_20|240ADX-DI_20|1WADX-DI_20|1M",
        "ADX-DI_20[1]ADX-DI_20[1]ADX-DI_20[1]|1ADX-DI_20[1]|5ADX-DI_20[1]|15ADX-DI_20[1]|30ADX-DI_20[1]|60ADX-DI_20[1]|120ADX-DI_20[1]|240ADX-DI_20[1]|1WADX-DI_20[1]|1M",
        "ADX-DI_50ADX-DI_50ADX-DI_50|1ADX-DI_50|5ADX-DI_50|15ADX-DI_50|30ADX-DI_50|60ADX-DI_50|120ADX-DI_50|240ADX-DI_50|1WADX-DI_50|1M",
        "ADX-DI_50[1]ADX-DI_50[1]ADX-DI_50[1]|1ADX-DI_50[1]|5ADX-DI_50[1]|15ADX-DI_50[1]|30ADX-DI_50[1]|60ADX-DI_50[1]|120ADX-DI_50[1]|240ADX-DI_50[1]|1WADX-DI_50[1]|1M",
        "ADX-DI_9ADX-DI_9ADX-DI_9|1ADX-DI_9|5ADX-DI_9|15ADX-DI_9|30ADX-DI_9|60ADX-DI_9|120ADX-DI_9|240ADX-DI_9|1WADX-DI_9|1M",
        "ADX-DI_9[1]ADX-DI_9[1]ADX-DI_9[1]|1ADX-DI_9[1]|5ADX-DI_9[1]|15ADX-DI_9[1]|30ADX-DI_9[1]|60ADX-DI_9[1]|120ADX-DI_9[1]|240ADX-DI_9[1]|1WADX-DI_9[1]|1M",
        "ADXADXADX|1ADX|5ADX|15ADX|30ADX|60ADX|120ADX|240ADX|1WADX|1M",
        "ADX_100ADX_100|1ADX_100|5ADX_100|15ADX_100|30ADX_100|60ADX_100|120ADX_100|240ADX_100|1WADX_100|1MADX_100",
        "ADX_20ADX_20ADX_20|1ADX_20|5ADX_20|15ADX_20|30ADX_20|60ADX_20|120ADX_20|240ADX_20|1WADX_20|1M",
        "ADX_50ADX_50ADX_50|1ADX_50|5ADX_50|15ADX_50|30ADX_50|60ADX_50|120ADX_50|240ADX_50|1WADX_50|1M",
        "ADX_9ADX_9ADX_9|1ADX_9|5ADX_9|15ADX_9|30ADX_9|60ADX_9|120ADX_9|240ADX_9|1WADX_9|1M",
        "AOAOAO|1AO|5AO|15AO|30AO|60AO|120AO|240AO|1WAO|1M",
        "AO[1]AO[1]AO[1]|1AO[1]|5AO[1]|15AO[1]|30AO[1]|60AO[1]|120AO[1]|240AO[1]|1WAO[1]|1M",
        "AO[2]AO[2]AO[2]|1AO[2]|5AO[2]|15AO[2]|30AO[2]|60AO[2]|120AO[2]|240AO[2]|1WAO[2]|1M",
        "ATRATRATR|1ATR|5ATR|15ATR|30ATR|60ATR|120ATR|240ATR|1WATR|1M",
        "ATRPATRPATRP|1ATRP|5ATRP|15ATRP|30ATRP|60ATRP|120ATRP|240ATRP|1WATRP|1M",
        "Aroon.DownAroon.DownAroon.Down|1Aroon.Down|5Aroon.Down|15Aroon.Down|30Aroon.Down|60Aroon.Down|120Aroon.Down|240Aroon.Down|1WAroon.Down|1M",
        "Aroon.UpAroon.UpAroon.Up|1Aroon.Up|5Aroon.Up|15Aroon.Up|30Aroon.Up|60Aroon.Up|120Aroon.Up|240Aroon.Up|1WAroon.Up|1M",
        "AvgValue.Traded_10d",
        "AvgValue.Traded_30d",
        "AvgValue.Traded_60d",
        "AvgValue.Traded_90d",
        "BB.basisBB.basisBB.basis|1BB.basis|5BB.basis|15BB.basis|30BB.basis|60BB.basis|120BB.basis|240BB.basis|1WBB.basis|1M",
        "BB.basis_50BB.basis_50BB.basis_50|1BB.basis_50|5BB.basis_50|15BB.basis_50|30BB.basis_50|60BB.basis_50|120BB.basis_50|240BB.basis_50|1WBB.basis_50|1M",
        "BB.lowerBB.lowerBB.lower|1BB.lower|5BB.lower|15BB.lower|30BB.lower|60BB.lower|120BB.lower|240BB.lower|1WBB.lower|1M",
        "BB.lower_50BB.lower_50BB.lower_50|1BB.lower_50|5BB.lower_50|15BB.lower_50|30BB.lower_50|60BB.lower_50|120BB.lower_50|240BB.lower_50|1WBB.lower_50|1M",
        "BB.upperBB.upperBB.upper|1BB.upper|5BB.upper|15BB.upper|30BB.upper|60BB.upper|120BB.upper|240BB.upper|1WBB.upper|1M",
        "BB.upper_50BB.upper_50BB.upper_50|1BB.upper_50|5BB.upper_50|15BB.upper_50|30BB.upper_50|60BB.upper_50|120BB.upper_50|240BB.upper_50|1WBB.upper_50|1M",
        "BBPowerBBPowerBBPower|1BBPower|5BBPower|15BBPower|30BBPower|60BBPower|120BBPower|240BBPower|1WBBPower|1M",
        "CCI20CCI20CCI20|1CCI20|5CCI20|15CCI20|30CCI20|60CCI20|120CCI20|240CCI20|1WCCI20|1M",
        "CCI20[1]CCI20[1]CCI20[1]|1CCI20[1]|5CCI20[1]|15CCI20[1]|30CCI20[1]|60CCI20[1]|120CCI20[1]|240CCI20[1]|1WCCI20[1]|1M",
        "Candle.3BlackCrowsCandle.3BlackCrowsCandle.3BlackCrows|1Candle.3BlackCrows|5Candle.3BlackCrows|15Candle.3BlackCrows|30Candle.3BlackCrows|60Candle.3BlackCrows|120Candle.3BlackCrows|240Candle.3BlackCrows|1WCandle.3BlackCrows|1M",
        "Candle.3WhiteSoldiersCandle.3WhiteSoldiersCandle.3WhiteSoldiers|1Candle.3WhiteSoldiers|5Candle.3WhiteSoldiers|15Candle.3WhiteSoldiers|30Candle.3WhiteSoldiers|60Candle.3WhiteSoldiers|120Candle.3WhiteSoldiers|240Candle.3WhiteSoldiers|1WCandle.3WhiteSoldiers|1M",
        "Candle.AbandonedBaby.BearishCandle.AbandonedBaby.BearishCandle.AbandonedBaby.Bearish|1Candle.AbandonedBaby.Bearish|5Candle.AbandonedBaby.Bearish|15Candle.AbandonedBaby.Bearish|30Candle.AbandonedBaby.Bearish|60Candle.AbandonedBaby.Bearish|120Candle.AbandonedBaby.Bearish|240Candle.AbandonedBaby.Bearish|1WCandle.AbandonedBaby.Bearish|1M",
        "Candle.AbandonedBaby.BullishCandle.AbandonedBaby.BullishCandle.AbandonedBaby.Bullish|1Candle.AbandonedBaby.Bullish|5Candle.AbandonedBaby.Bullish|15Candle.AbandonedBaby.Bullish|30Candle.AbandonedBaby.Bullish|60Candle.AbandonedBaby.Bullish|120Candle.AbandonedBaby.Bullish|240Candle.AbandonedBaby.Bullish|1WCandle.AbandonedBaby.Bullish|1M",
        "Candle.Doji.DragonflyCandle.Doji.DragonflyCandle.Doji.Dragonfly|1Candle.Doji.Dragonfly|5Candle.Doji.Dragonfly|15Candle.Doji.Dragonfly|30Candle.Doji.Dragonfly|60Candle.Doji.Dragonfly|120Candle.Doji.Dragonfly|240Candle.Doji.Dragonfly|1WCandle.Doji.Dragonfly|1M",
        "Candle.Doji.GravestoneCandle.Doji.GravestoneCandle.Doji.Gravestone|1Candle.Doji.Gravestone|5Candle.Doji.Gravestone|15Candle.Doji.Gravestone|30Candle.Doji.Gravestone|60Candle.Doji.Gravestone|120Candle.Doji.Gravestone|240Candle.Doji.Gravestone|1WCandle.Doji.Gravestone|1M",
        "Candle.DojiCandle.DojiCandle.Doji|1Candle.Doji|5Candle.Doji|15Candle.Doji|30Candle.Doji|60Candle.Doji|120Candle.Doji|240Candle.Doji|1WCandle.Doji|1M",
        "Candle.Engulfing.BearishCandle.Engulfing.BearishCandle.Engulfing.Bearish|1Candle.Engulfing.Bearish|5Candle.Engulfing.Bearish|15Candle.Engulfing.Bearish|30Candle.Engulfing.Bearish|60Candle.Engulfing.Bearish|120Candle.Engulfing.Bearish|240Candle.Engulfing.Bearish|1WCandle.Engulfing.Bearish|1M",
        "Candle.Engulfing.BullishCandle.Engulfing.BullishCandle.Engulfing.Bullish|1Candle.Engulfing.Bullish|5Candle.Engulfing.Bullish|15Candle.Engulfing.Bullish|30Candle.Engulfing.Bullish|60Candle.Engulfing.Bullish|120Candle.Engulfing.Bullish|240Candle.Engulfing.Bullish|1WCandle.Engulfing.Bullish|1M",
        "Candle.EveningStarCandle.EveningStarCandle.EveningStar|1Candle.EveningStar|5Candle.EveningStar|15Candle.EveningStar|30Candle.EveningStar|60Candle.EveningStar|120Candle.EveningStar|240Candle.EveningStar|1WCandle.EveningStar|1M",
        "Candle.HammerCandle.HammerCandle.Hammer|1Candle.Hammer|5Candle.Hammer|15Candle.Hammer|30Candle.Hammer|60Candle.Hammer|120Candle.Hammer|240Candle.Hammer|1WCandle.Hammer|1M",
        "Candle.HangingManCandle.HangingManCandle.HangingMan|1Candle.HangingMan|5Candle.HangingMan|15Candle.HangingMan|30Candle.HangingMan|60Candle.HangingMan|120Candle.HangingMan|240Candle.HangingMan|1WCandle.HangingMan|1M",
        "Candle.Harami.BearishCandle.Harami.BearishCandle.Harami.Bearish|1Candle.Harami.Bearish|5Candle.Harami.Bearish|15Candle.Harami.Bearish|30Candle.Harami.Bearish|60Candle.Harami.Bearish|120Candle.Harami.Bearish|240Candle.Harami.Bearish|1WCandle.Harami.Bearish|1M",
        "Candle.Harami.BullishCandle.Harami.BullishCandle.Harami.Bullish|1Candle.Harami.Bullish|5Candle.Harami.Bullish|15Candle.Harami.Bullish|30Candle.Harami.Bullish|60Candle.Harami.Bullish|120Candle.Harami.Bullish|240Candle.Harami.Bullish|1WCandle.Harami.Bullish|1M",
        "Candle.InvertedHammerCandle.InvertedHammerCandle.InvertedHammer|1Candle.InvertedHammer|5Candle.InvertedHammer|15Candle.InvertedHammer|30Candle.InvertedHammer|60Candle.InvertedHammer|120Candle.InvertedHammer|240Candle.InvertedHammer|1WCandle.InvertedHammer|1M",
        "Candle.Kicking.BearishCandle.Kicking.BearishCandle.Kicking.Bearish|1Candle.Kicking.Bearish|5Candle.Kicking.Bearish|15Candle.Kicking.Bearish|30Candle.Kicking.Bearish|60Candle.Kicking.Bearish|120Candle.Kicking.Bearish|240Candle.Kicking.Bearish|1WCandle.Kicking.Bearish|1M",
        "Candle.Kicking.BullishCandle.Kicking.BullishCandle.Kicking.Bullish|1Candle.Kicking.Bullish|5Candle.Kicking.Bullish|15Candle.Kicking.Bullish|30Candle.Kicking.Bullish|60Candle.Kicking.Bullish|120Candle.Kicking.Bullish|240Candle.Kicking.Bullish|1WCandle.Kicking.Bullish|1M",
        "Candle.LongShadow.LowerCandle.LongShadow.LowerCandle.LongShadow.Lower|1Candle.LongShadow.Lower|5Candle.LongShadow.Lower|15Candle.LongShadow.Lower|30Candle.LongShadow.Lower|60Candle.LongShadow.Lower|120Candle.LongShadow.Lower|240Candle.LongShadow.Lower|1WCandle.LongShadow.Lower|1M",
        "Candle.LongShadow.UpperCandle.LongShadow.UpperCandle.LongShadow.Upper|1Candle.LongShadow.Upper|5Candle.LongShadow.Upper|15Candle.LongShadow.Upper|30Candle.LongShadow.Upper|60Candle.LongShadow.Upper|120Candle.LongShadow.Upper|240Candle.LongShadow.Upper|1WCandle.LongShadow.Upper|1M",
        "Candle.Marubozu.BlackCandle.Marubozu.BlackCandle.Marubozu.Black|1Candle.Marubozu.Black|5Candle.Marubozu.Black|15Candle.Marubozu.Black|30Candle.Marubozu.Black|60Candle.Marubozu.Black|120Candle.Marubozu.Black|240Candle.Marubozu.Black|1WCandle.Marubozu.Black|1M",
        "Candle.Marubozu.WhiteCandle.Marubozu.WhiteCandle.Marubozu.White|1Candle.Marubozu.White|5Candle.Marubozu.White|15Candle.Marubozu.White|30Candle.Marubozu.White|60Candle.Marubozu.White|120Candle.Marubozu.White|240Candle.Marubozu.White|1WCandle.Marubozu.White|1M",
        "Candle.MorningStarCandle.MorningStarCandle.MorningStar|1Candle.MorningStar|5Candle.MorningStar|15Candle.MorningStar|30Candle.MorningStar|60Candle.MorningStar|120Candle.MorningStar|240Candle.MorningStar|1WCandle.MorningStar|1M",
        "Candle.ShootingStarCandle.ShootingStarCandle.ShootingStar|1Candle.ShootingStar|5Candle.ShootingStar|15Candle.ShootingStar|30Candle.ShootingStar|60Candle.ShootingStar|120Candle.ShootingStar|240Candle.ShootingStar|1WCandle.ShootingStar|1M",
        "Candle.SpinningTop.BlackCandle.SpinningTop.BlackCandle.SpinningTop.Black|1Candle.SpinningTop.Black|5Candle.SpinningTop.Black|15Candle.SpinningTop.Black|30Candle.SpinningTop.Black|60Candle.SpinningTop.Black|120Candle.SpinningTop.Black|240Candle.SpinningTop.Black|1WCandle.SpinningTop.Black|1M",
        "Candle.SpinningTop.WhiteCandle.SpinningTop.WhiteCandle.SpinningTop.White|1Candle.SpinningTop.White|5Candle.SpinningTop.White|15Candle.SpinningTop.White|30Candle.SpinningTop.White|60Candle.SpinningTop.White|120Candle.SpinningTop.White|240Candle.SpinningTop.White|1WCandle.SpinningTop.White|1M",
        "Candle.TriStar.BearishCandle.TriStar.BearishCandle.TriStar.Bearish|1Candle.TriStar.Bearish|5Candle.TriStar.Bearish|15Candle.TriStar.Bearish|30Candle.TriStar.Bearish|60Candle.TriStar.Bearish|120Candle.TriStar.Bearish|240Candle.TriStar.Bearish|1WCandle.TriStar.Bearish|1M",
        "Candle.TriStar.BullishCandle.TriStar.BullishCandle.TriStar.Bullish|1Candle.TriStar.Bullish|5Candle.TriStar.Bullish|15Candle.TriStar.Bullish|30Candle.TriStar.Bullish|60Candle.TriStar.Bullish|120Candle.TriStar.Bullish|240Candle.TriStar.Bullish|1WCandle.TriStar.Bullish|1M",
        "ChaikinMoneyFlowChaikinMoneyFlowChaikinMoneyFlow|1ChaikinMoneyFlow|5ChaikinMoneyFlow|15ChaikinMoneyFlow|30ChaikinMoneyFlow|60ChaikinMoneyFlow|120ChaikinMoneyFlow|240ChaikinMoneyFlow|1WChaikinMoneyFlow|1M",
        "DonchCh20.LowerDonchCh20.LowerDonchCh20.Lower|1DonchCh20.Lower|5DonchCh20.Lower|15DonchCh20.Lower|30DonchCh20.Lower|60DonchCh20.Lower|120DonchCh20.Lower|240DonchCh20.Lower|1WDonchCh20.Lower|1M",
        "DonchCh20.MiddleDonchCh20.MiddleDonchCh20.Middle|1DonchCh20.Middle|5DonchCh20.Middle|15DonchCh20.Middle|30DonchCh20.Middle|60DonchCh20.Middle|120DonchCh20.Middle|240DonchCh20.Middle|1WDonchCh20.Middle|1M",
        "DonchCh20.UpperDonchCh20.UpperDonchCh20.Upper|1DonchCh20.Upper|5DonchCh20.Upper|15DonchCh20.Upper|30DonchCh20.Upper|60DonchCh20.Upper|120DonchCh20.Upper|240DonchCh20.Upper|1WDonchCh20.Upper|1M",
        "EMA100EMA100EMA100|1EMA100|5EMA100|15EMA100|30EMA100|60EMA100|120EMA100|240EMA100|1WEMA100|1M",
        "EMA10EMA10EMA10|1EMA10|5EMA10|15EMA10|30EMA10|60EMA10|120EMA10|240EMA10|1WEMA10|1M",
        "EMA120EMA120|1EMA120|5EMA120|15EMA120|30EMA120|60EMA120|120EMA120|240EMA120|1WEMA120|1MEMA120",
        "EMA12EMA12EMA12|1EMA12|5EMA12|15EMA12|30EMA12|60EMA12|120EMA12|240EMA12|1WEMA12|1M",
        "EMA13EMA13EMA13|1EMA13|5EMA13|15EMA13|30EMA13|60EMA13|120EMA13|240EMA13|1WEMA13|1M",
        "EMA144EMA144|1EMA144|5EMA144|15EMA144|30EMA144|60EMA144|120EMA144|240EMA144|1WEMA144|1MEMA144",
        "EMA14EMA14EMA14|1EMA14|5EMA14|15EMA14|30EMA14|60EMA14|120EMA14|240EMA14|1WEMA14|1M",
        "EMA150EMA150|1EMA150|5EMA150|15EMA150|30EMA150|60EMA150|120EMA150|240EMA150|1WEMA150|1MEMA150",
        "EMA15EMA15EMA15|1EMA15|5EMA15|15EMA15|30EMA15|60EMA15|120EMA15|240EMA15|1WEMA15|1M",
        "EMA200EMA200EMA200|1EMA200|5EMA200|15EMA200|30EMA200|60EMA200|120EMA200|240EMA200|1WEMA200|1M",
        "EMA20EMA20EMA20|1EMA20|5EMA20|15EMA20|30EMA20|60EMA20|120EMA20|240EMA20|1WEMA20|1M",
        "EMA21EMA21EMA21|1EMA21|5EMA21|15EMA21|30EMA21|60EMA21|120EMA21|240EMA21|1WEMA21|1M",
        "EMA250EMA250|1EMA250|5EMA250|15EMA250|30EMA250|60EMA250|120EMA250|240EMA250|1WEMA250|1MEMA250",
        "EMA25EMA25EMA25|1EMA25|5EMA25|15EMA25|30EMA25|60EMA25|120EMA25|240EMA25|1WEMA25|1M",
        "EMA26EMA26EMA26|1EMA26|5EMA26|15EMA26|30EMA26|60EMA26|120EMA26|240EMA26|1WEMA26|1M",
        "EMA2EMA2EMA2|1EMA2|5EMA2|15EMA2|30EMA2|60EMA2|120EMA2|240EMA2|1WEMA2|1M",
        "EMA300EMA300|1EMA300|5EMA300|15EMA300|30EMA300|60EMA300|120EMA300|240EMA300|1WEMA300|1MEMA300",
        "EMA30EMA30EMA30|1EMA30|5EMA30|15EMA30|30EMA30|60EMA30|120EMA30|240EMA30|1WEMA30|1M",
        "EMA34EMA34EMA34|1EMA34|5EMA34|15EMA34|30EMA34|60EMA34|120EMA34|240EMA34|1WEMA34|1M",
        "EMA3EMA3EMA3|1EMA3|5EMA3|15EMA3|30EMA3|60EMA3|120EMA3|240EMA3|1WEMA3|1M",
        "EMA40EMA40EMA40|1EMA40|5EMA40|15EMA40|30EMA40|60EMA40|120EMA40|240EMA40|1WEMA40|1M",
        "EMA50EMA50EMA50|1EMA50|5EMA50|15EMA50|30EMA50|60EMA50|120EMA50|240EMA50|1WEMA50|1M",
        "EMA55EMA55|1EMA55|5EMA55|15EMA55|30EMA55|60EMA55|120EMA55|240EMA55|1WEMA55|1MEMA55",
        "EMA5EMA5EMA5|1EMA5|5EMA5|15EMA5|30EMA5|60EMA5|120EMA5|240EMA5|1WEMA5|1M",
        "EMA60EMA60|1EMA60|5EMA60|15EMA60|30EMA60|60EMA60|120EMA60|240EMA60|1WEMA60|1MEMA60",
        "EMA6EMA6EMA6|1EMA6|5EMA6|15EMA6|30EMA6|60EMA6|120EMA6|240EMA6|1WEMA6|1M",
        "EMA75EMA75|1EMA75|5EMA75|15EMA75|30EMA75|60EMA75|120EMA75|240EMA75|1WEMA75|1MEMA75",
        "EMA7EMA7EMA7|1EMA7|5EMA7|15EMA7|30EMA7|60EMA7|120EMA7|240EMA7|1WEMA7|1M",
        "EMA89EMA89|1EMA89|5EMA89|15EMA89|30EMA89|60EMA89|120EMA89|240EMA89|1WEMA89|1MEMA89",
        "EMA8EMA8EMA8|1EMA8|5EMA8|15EMA8|30EMA8|60EMA8|120EMA8|240EMA8|1WEMA8|1M",
        "EMA9EMA9EMA9|1EMA9|5EMA9|15EMA9|30EMA9|60EMA9|120EMA9|240EMA9|1WEMA9|1M",
        "High.1M",
        "High.3M",
        "High.5D",
        "High.6M",
        "High.All",
        "High.All.Calc",
        "HullMA200HullMA200|1HullMA200|5HullMA200|15HullMA200|30HullMA200|60HullMA200|120HullMA200|240HullMA200|1WHullMA200|1MHullMA200",
        "HullMA20HullMA20HullMA20|1HullMA20|5HullMA20|15HullMA20|30HullMA20|60HullMA20|120HullMA20|240HullMA20|1WHullMA20|1M",
        "HullMA9HullMA9HullMA9|1HullMA9|5HullMA9|15HullMA9|30HullMA9|60HullMA9|120HullMA9|240HullMA9|1WHullMA9|1M",
        "Ichimoku.BLineIchimoku.BLineIchimoku.BLine|1Ichimoku.BLine|5Ichimoku.BLine|15Ichimoku.BLine|30Ichimoku.BLine|60Ichimoku.BLine|120Ichimoku.BLine|240Ichimoku.BLine|1WIchimoku.BLine|1M",
        "Ichimoku.BLine_20_60_120_30Ichimoku.BLine_20_60_120_30Ichimoku.BLine_20_60_120_30|1Ichimoku.BLine_20_60_120_30|5Ichimoku.BLine_20_60_120_30|15Ichimoku.BLine_20_60_120_30|30Ichimoku.BLine_20_60_120_30|60Ichimoku.BLine_20_60_120_30|120Ichimoku.BLine_20_60_120_30|240Ichimoku.BLine_20_60_120_30|1WIchimoku.BLine_20_60_120_30|1M",
        "Ichimoku.CLineIchimoku.CLineIchimoku.CLine|1Ichimoku.CLine|5Ichimoku.CLine|15Ichimoku.CLine|30Ichimoku.CLine|60Ichimoku.CLine|120Ichimoku.CLine|240Ichimoku.CLine|1WIchimoku.CLine|1M",
        "Ichimoku.CLine_20_60_120_30Ichimoku.CLine_20_60_120_30Ichimoku.CLine_20_60_120_30|1Ichimoku.CLine_20_60_120_30|5Ichimoku.CLine_20_60_120_30|15Ichimoku.CLine_20_60_120_30|30Ichimoku.CLine_20_60_120_30|60Ichimoku.CLine_20_60_120_30|120Ichimoku.CLine_20_60_120_30|240Ichimoku.CLine_20_60_120_30|1WIchimoku.CLine_20_60_120_30|1M",
        "Ichimoku.Lead1Ichimoku.Lead1Ichimoku.Lead1|1Ichimoku.Lead1|5Ichimoku.Lead1|15Ichimoku.Lead1|30Ichimoku.Lead1|60Ichimoku.Lead1|120Ichimoku.Lead1|240Ichimoku.Lead1|1WIchimoku.Lead1|1M",
        "Ichimoku.Lead1_20_60_120_30Ichimoku.Lead1_20_60_120_30Ichimoku.Lead1_20_60_120_30|1Ichimoku.Lead1_20_60_120_30|5Ichimoku.Lead1_20_60_120_30|15Ichimoku.Lead1_20_60_120_30|30Ichimoku.Lead1_20_60_120_30|60Ichimoku.Lead1_20_60_120_30|120Ichimoku.Lead1_20_60_120_30|240Ichimoku.Lead1_20_60_120_30|1WIchimoku.Lead1_20_60_120_30|1M",
        "Ichimoku.Lead2Ichimoku.Lead2Ichimoku.Lead2|1Ichimoku.Lead2|5Ichimoku.Lead2|15Ichimoku.Lead2|30Ichimoku.Lead2|60Ichimoku.Lead2|120Ichimoku.Lead2|240Ichimoku.Lead2|1WIchimoku.Lead2|1M",
        "Ichimoku.Lead2_20_60_120_30Ichimoku.Lead2_20_60_120_30Ichimoku.Lead2_20_60_120_30|1Ichimoku.Lead2_20_60_120_30|5Ichimoku.Lead2_20_60_120_30|15Ichimoku.Lead2_20_60_120_30|30Ichimoku.Lead2_20_60_120_30|60Ichimoku.Lead2_20_60_120_30|120Ichimoku.Lead2_20_60_120_30|240Ichimoku.Lead2_20_60_120_30|1WIchimoku.Lead2_20_60_120_30|1M",
        "KltChnl.basisKltChnl.basisKltChnl.basis|1KltChnl.basis|5KltChnl.basis|15KltChnl.basis|30KltChnl.basis|60KltChnl.basis|120KltChnl.basis|240KltChnl.basis|1WKltChnl.basis|1M",
        "KltChnl.lowerKltChnl.lowerKltChnl.lower|1KltChnl.lower|5KltChnl.lower|15KltChnl.lower|30KltChnl.lower|60KltChnl.lower|120KltChnl.lower|240KltChnl.lower|1WKltChnl.lower|1M",
        "KltChnl.upperKltChnl.upperKltChnl.upper|1KltChnl.upper|5KltChnl.upper|15KltChnl.upper|30KltChnl.upper|60KltChnl.upper|120KltChnl.upper|240KltChnl.upper|1WKltChnl.upper|1M",
        "Low.1M",
        "Low.3M",
        "Low.5D",
        "Low.6M",
        "Low.All",
        "Low.All.Calc",
        "MACD.histMACD.histMACD.hist|1MACD.hist|5MACD.hist|15MACD.hist|30MACD.hist|60MACD.hist|120MACD.hist|240MACD.hist|1WMACD.hist|1M",
        "MACD.macdMACD.macdMACD.macd|1MACD.macd|5MACD.macd|15MACD.macd|30MACD.macd|60MACD.macd|120MACD.macd|240MACD.macd|1WMACD.macd|1M",
        "MACD.signalMACD.signalMACD.signal|1MACD.signal|5MACD.signal|15MACD.signal|30MACD.signal|60MACD.signal|120MACD.signal|240MACD.signal|1WMACD.signal|1M",
        "MomMomMom|1Mom|5Mom|15Mom|30Mom|60Mom|120Mom|240Mom|1WMom|1M",
        "Mom[1]Mom[1]Mom[1]|1Mom[1]|5Mom[1]|15Mom[1]|30Mom[1]|60Mom[1]|120Mom[1]|240Mom[1]|1WMom[1]|1M",
        "Mom_14Mom_14Mom_14|1Mom_14|5Mom_14|15Mom_14|30Mom_14|60Mom_14|120Mom_14|240Mom_14|1WMom_14|1M",
        "Mom_14[1]Mom_14[1]Mom_14[1]|1Mom_14[1]|5Mom_14[1]|15Mom_14[1]|30Mom_14[1]|60Mom_14[1]|120Mom_14[1]|240Mom_14[1]|1WMom_14[1]|1M",
        "MoneyFlowMoneyFlowMoneyFlow|1MoneyFlow|5MoneyFlow|15MoneyFlow|30MoneyFlow|60MoneyFlow|120MoneyFlow|240MoneyFlow|1WMoneyFlow|1M",
        "Open.All.Calc",
        "P.SARP.SARP.SAR|1P.SAR|5P.SAR|15P.SAR|30P.SAR|60P.SAR|120P.SAR|240P.SAR|1WP.SAR|1M",
        "Perf.10Y",
        "Perf.1M",
        "Perf.1M.MarketCap",
        "Perf.1W.MarketCap",
        "Perf.1Y.MarketCap",
        "Perf.3M",
        "Perf.3M.MarketCap",
        "Perf.3Y",
        "Perf.5D",
        "Perf.5Y",
        "Perf.5Y.MarketCap",
        "Perf.6M",
        "Perf.6M.MarketCap",
        "Perf.All",
        "Perf.W",
        "Perf.Y",
        "Perf.YTD",
        "Perf.YTD.MarketCap",
        "Pivot.M.Camarilla.MiddlePivot.M.Camarilla.MiddlePivot.M.Camarilla.Middle|1Pivot.M.Camarilla.Middle|5Pivot.M.Camarilla.Middle|15Pivot.M.Camarilla.Middle|30Pivot.M.Camarilla.Middle|60Pivot.M.Camarilla.Middle|120Pivot.M.Camarilla.Middle|240Pivot.M.Camarilla.Middle|1WPivot.M.Camarilla.Middle|1M",
        "Pivot.M.Camarilla.R1Pivot.M.Camarilla.R1Pivot.M.Camarilla.R1|1Pivot.M.Camarilla.R1|5Pivot.M.Camarilla.R1|15Pivot.M.Camarilla.R1|30Pivot.M.Camarilla.R1|60Pivot.M.Camarilla.R1|120Pivot.M.Camarilla.R1|240Pivot.M.Camarilla.R1|1WPivot.M.Camarilla.R1|1M",
        "Pivot.M.Camarilla.R2Pivot.M.Camarilla.R2Pivot.M.Camarilla.R2|1Pivot.M.Camarilla.R2|5Pivot.M.Camarilla.R2|15Pivot.M.Camarilla.R2|30Pivot.M.Camarilla.R2|60Pivot.M.Camarilla.R2|120Pivot.M.Camarilla.R2|240Pivot.M.Camarilla.R2|1WPivot.M.Camarilla.R2|1M",
        "Pivot.M.Camarilla.R3Pivot.M.Camarilla.R3Pivot.M.Camarilla.R3|1Pivot.M.Camarilla.R3|5Pivot.M.Camarilla.R3|15Pivot.M.Camarilla.R3|30Pivot.M.Camarilla.R3|60Pivot.M.Camarilla.R3|120Pivot.M.Camarilla.R3|240Pivot.M.Camarilla.R3|1WPivot.M.Camarilla.R3|1M",
        "Pivot.M.Camarilla.S1Pivot.M.Camarilla.S1Pivot.M.Camarilla.S1|1Pivot.M.Camarilla.S1|5Pivot.M.Camarilla.S1|15Pivot.M.Camarilla.S1|30Pivot.M.Camarilla.S1|60Pivot.M.Camarilla.S1|120Pivot.M.Camarilla.S1|240Pivot.M.Camarilla.S1|1WPivot.M.Camarilla.S1|1M",
        "Pivot.M.Camarilla.S2Pivot.M.Camarilla.S2Pivot.M.Camarilla.S2|1Pivot.M.Camarilla.S2|5Pivot.M.Camarilla.S2|15Pivot.M.Camarilla.S2|30Pivot.M.Camarilla.S2|60Pivot.M.Camarilla.S2|120Pivot.M.Camarilla.S2|240Pivot.M.Camarilla.S2|1WPivot.M.Camarilla.S2|1M",
        "Pivot.M.Camarilla.S3Pivot.M.Camarilla.S3Pivot.M.Camarilla.S3|1Pivot.M.Camarilla.S3|5Pivot.M.Camarilla.S3|15Pivot.M.Camarilla.S3|30Pivot.M.Camarilla.S3|60Pivot.M.Camarilla.S3|120Pivot.M.Camarilla.S3|240Pivot.M.Camarilla.S3|1WPivot.M.Camarilla.S3|1M",
        "Pivot.M.Classic.MiddlePivot.M.Classic.MiddlePivot.M.Classic.Middle|1Pivot.M.Classic.Middle|5Pivot.M.Classic.Middle|15Pivot.M.Classic.Middle|30Pivot.M.Classic.Middle|60Pivot.M.Classic.Middle|120Pivot.M.Classic.Middle|240Pivot.M.Classic.Middle|1WPivot.M.Classic.Middle|1M",
        "Pivot.M.Classic.R1Pivot.M.Classic.R1Pivot.M.Classic.R1|1Pivot.M.Classic.R1|5Pivot.M.Classic.R1|15Pivot.M.Classic.R1|30Pivot.M.Classic.R1|60Pivot.M.Classic.R1|120Pivot.M.Classic.R1|240Pivot.M.Classic.R1|1WPivot.M.Classic.R1|1M",
        "Pivot.M.Classic.R2Pivot.M.Classic.R2Pivot.M.Classic.R2|1Pivot.M.Classic.R2|5Pivot.M.Classic.R2|15Pivot.M.Classic.R2|30Pivot.M.Classic.R2|60Pivot.M.Classic.R2|120Pivot.M.Classic.R2|240Pivot.M.Classic.R2|1WPivot.M.Classic.R2|1M",
        "Pivot.M.Classic.R3Pivot.M.Classic.R3Pivot.M.Classic.R3|1Pivot.M.Classic.R3|5Pivot.M.Classic.R3|15Pivot.M.Classic.R3|30Pivot.M.Classic.R3|60Pivot.M.Classic.R3|120Pivot.M.Classic.R3|240Pivot.M.Classic.R3|1WPivot.M.Classic.R3|1M",
        "Pivot.M.Classic.S1Pivot.M.Classic.S1Pivot.M.Classic.S1|1Pivot.M.Classic.S1|5Pivot.M.Classic.S1|15Pivot.M.Classic.S1|30Pivot.M.Classic.S1|60Pivot.M.Classic.S1|120Pivot.M.Classic.S1|240Pivot.M.Classic.S1|1WPivot.M.Classic.S1|1M",
        "Pivot.M.Classic.S2Pivot.M.Classic.S2Pivot.M.Classic.S2|1Pivot.M.Classic.S2|5Pivot.M.Classic.S2|15Pivot.M.Classic.S2|30Pivot.M.Classic.S2|60Pivot.M.Classic.S2|120Pivot.M.Classic.S2|240Pivot.M.Classic.S2|1WPivot.M.Classic.S2|1M",
        "Pivot.M.Classic.S3Pivot.M.Classic.S3Pivot.M.Classic.S3|1Pivot.M.Classic.S3|5Pivot.M.Classic.S3|15Pivot.M.Classic.S3|30Pivot.M.Classic.S3|60Pivot.M.Classic.S3|120Pivot.M.Classic.S3|240Pivot.M.Classic.S3|1WPivot.M.Classic.S3|1M",
        "Pivot.M.Demark.MiddlePivot.M.Demark.MiddlePivot.M.Demark.Middle|1Pivot.M.Demark.Middle|5Pivot.M.Demark.Middle|15Pivot.M.Demark.Middle|30Pivot.M.Demark.Middle|60Pivot.M.Demark.Middle|120Pivot.M.Demark.Middle|240Pivot.M.Demark.Middle|1WPivot.M.Demark.Middle|1M",
        "Pivot.M.Demark.R1Pivot.M.Demark.R1Pivot.M.Demark.R1|1Pivot.M.Demark.R1|5Pivot.M.Demark.R1|15Pivot.M.Demark.R1|30Pivot.M.Demark.R1|60Pivot.M.Demark.R1|120Pivot.M.Demark.R1|240Pivot.M.Demark.R1|1WPivot.M.Demark.R1|1M",
        "Pivot.M.Demark.S1Pivot.M.Demark.S1Pivot.M.Demark.S1|1Pivot.M.Demark.S1|5Pivot.M.Demark.S1|15Pivot.M.Demark.S1|30Pivot.M.Demark.S1|60Pivot.M.Demark.S1|120Pivot.M.Demark.S1|240Pivot.M.Demark.S1|1WPivot.M.Demark.S1|1M",
        "Pivot.M.Fibonacci.MiddlePivot.M.Fibonacci.MiddlePivot.M.Fibonacci.Middle|1Pivot.M.Fibonacci.Middle|5Pivot.M.Fibonacci.Middle|15Pivot.M.Fibonacci.Middle|30Pivot.M.Fibonacci.Middle|60Pivot.M.Fibonacci.Middle|120Pivot.M.Fibonacci.Middle|240Pivot.M.Fibonacci.Middle|1WPivot.M.Fibonacci.Middle|1M",
        "Pivot.M.Fibonacci.R1Pivot.M.Fibonacci.R1Pivot.M.Fibonacci.R1|1Pivot.M.Fibonacci.R1|5Pivot.M.Fibonacci.R1|15Pivot.M.Fibonacci.R1|30Pivot.M.Fibonacci.R1|60Pivot.M.Fibonacci.R1|120Pivot.M.Fibonacci.R1|240Pivot.M.Fibonacci.R1|1WPivot.M.Fibonacci.R1|1M",
        "Pivot.M.Fibonacci.R2Pivot.M.Fibonacci.R2Pivot.M.Fibonacci.R2|1Pivot.M.Fibonacci.R2|5Pivot.M.Fibonacci.R2|15Pivot.M.Fibonacci.R2|30Pivot.M.Fibonacci.R2|60Pivot.M.Fibonacci.R2|120Pivot.M.Fibonacci.R2|240Pivot.M.Fibonacci.R2|1WPivot.M.Fibonacci.R2|1M",
        "Pivot.M.Fibonacci.R3Pivot.M.Fibonacci.R3Pivot.M.Fibonacci.R3|1Pivot.M.Fibonacci.R3|5Pivot.M.Fibonacci.R3|15Pivot.M.Fibonacci.R3|30Pivot.M.Fibonacci.R3|60Pivot.M.Fibonacci.R3|120Pivot.M.Fibonacci.R3|240Pivot.M.Fibonacci.R3|1WPivot.M.Fibonacci.R3|1M",
        "Pivot.M.Fibonacci.S1Pivot.M.Fibonacci.S1Pivot.M.Fibonacci.S1|1Pivot.M.Fibonacci.S1|5Pivot.M.Fibonacci.S1|15Pivot.M.Fibonacci.S1|30Pivot.M.Fibonacci.S1|60Pivot.M.Fibonacci.S1|120Pivot.M.Fibonacci.S1|240Pivot.M.Fibonacci.S1|1WPivot.M.Fibonacci.S1|1M",
        "Pivot.M.Fibonacci.S2Pivot.M.Fibonacci.S2Pivot.M.Fibonacci.S2|1Pivot.M.Fibonacci.S2|5Pivot.M.Fibonacci.S2|15Pivot.M.Fibonacci.S2|30Pivot.M.Fibonacci.S2|60Pivot.M.Fibonacci.S2|120Pivot.M.Fibonacci.S2|240Pivot.M.Fibonacci.S2|1WPivot.M.Fibonacci.S2|1M",
        "Pivot.M.Fibonacci.S3Pivot.M.Fibonacci.S3Pivot.M.Fibonacci.S3|1Pivot.M.Fibonacci.S3|5Pivot.M.Fibonacci.S3|15Pivot.M.Fibonacci.S3|30Pivot.M.Fibonacci.S3|60Pivot.M.Fibonacci.S3|120Pivot.M.Fibonacci.S3|240Pivot.M.Fibonacci.S3|1WPivot.M.Fibonacci.S3|1M",
        "Pivot.M.Woodie.MiddlePivot.M.Woodie.MiddlePivot.M.Woodie.Middle|1Pivot.M.Woodie.Middle|5Pivot.M.Woodie.Middle|15Pivot.M.Woodie.Middle|30Pivot.M.Woodie.Middle|60Pivot.M.Woodie.Middle|120Pivot.M.Woodie.Middle|240Pivot.M.Woodie.Middle|1WPivot.M.Woodie.Middle|1M",
        "Pivot.M.Woodie.R1Pivot.M.Woodie.R1Pivot.M.Woodie.R1|1Pivot.M.Woodie.R1|5Pivot.M.Woodie.R1|15Pivot.M.Woodie.R1|30Pivot.M.Woodie.R1|60Pivot.M.Woodie.R1|120Pivot.M.Woodie.R1|240Pivot.M.Woodie.R1|1WPivot.M.Woodie.R1|1M",
        "Pivot.M.Woodie.R2Pivot.M.Woodie.R2Pivot.M.Woodie.R2|1Pivot.M.Woodie.R2|5Pivot.M.Woodie.R2|15Pivot.M.Woodie.R2|30Pivot.M.Woodie.R2|60Pivot.M.Woodie.R2|120Pivot.M.Woodie.R2|240Pivot.M.Woodie.R2|1WPivot.M.Woodie.R2|1M",
        "Pivot.M.Woodie.R3Pivot.M.Woodie.R3Pivot.M.Woodie.R3|1Pivot.M.Woodie.R3|5Pivot.M.Woodie.R3|15Pivot.M.Woodie.R3|30Pivot.M.Woodie.R3|60Pivot.M.Woodie.R3|120Pivot.M.Woodie.R3|240Pivot.M.Woodie.R3|1WPivot.M.Woodie.R3|1M",
        "Pivot.M.Woodie.S1Pivot.M.Woodie.S1Pivot.M.Woodie.S1|1Pivot.M.Woodie.S1|5Pivot.M.Woodie.S1|15Pivot.M.Woodie.S1|30Pivot.M.Woodie.S1|60Pivot.M.Woodie.S1|120Pivot.M.Woodie.S1|240Pivot.M.Woodie.S1|1WPivot.M.Woodie.S1|1M",
        "Pivot.M.Woodie.S2Pivot.M.Woodie.S2Pivot.M.Woodie.S2|1Pivot.M.Woodie.S2|5Pivot.M.Woodie.S2|15Pivot.M.Woodie.S2|30Pivot.M.Woodie.S2|60Pivot.M.Woodie.S2|120Pivot.M.Woodie.S2|240Pivot.M.Woodie.S2|1WPivot.M.Woodie.S2|1M",
        "Pivot.M.Woodie.S3Pivot.M.Woodie.S3Pivot.M.Woodie.S3|1Pivot.M.Woodie.S3|5Pivot.M.Woodie.S3|15Pivot.M.Woodie.S3|30Pivot.M.Woodie.S3|60Pivot.M.Woodie.S3|120Pivot.M.Woodie.S3|240Pivot.M.Woodie.S3|1WPivot.M.Woodie.S3|1M",
        "ROCROCROC|1ROC|5ROC|15ROC|30ROC|60ROC|120ROC|240ROC|1WROC|1M",
        "RSI10RSI10RSI10|1RSI10|5RSI10|15RSI10|30RSI10|60RSI10|120RSI10|240RSI10|1WRSI10|1M",
        "RSI10[1]RSI10[1]RSI10[1]|1RSI10[1]|5RSI10[1]|15RSI10[1]|30RSI10[1]|60RSI10[1]|120RSI10[1]|240RSI10[1]|1WRSI10[1]|1M",
        "RSI20RSI20RSI20|1RSI20|5RSI20|15RSI20|30RSI20|60RSI20|120RSI20|240RSI20|1WRSI20|1M",
        "RSI20[1]RSI20[1]RSI20[1]|1RSI20[1]|5RSI20[1]|15RSI20[1]|30RSI20[1]|60RSI20[1]|120RSI20[1]|240RSI20[1]|1WRSI20[1]|1M",
        "RSI21RSI21RSI21|1RSI21|5RSI21|15RSI21|30RSI21|60RSI21|120RSI21|240RSI21|1WRSI21|1M",
        "RSI21[1]RSI21[1]RSI21[1]|1RSI21[1]|5RSI21[1]|15RSI21[1]|30RSI21[1]|60RSI21[1]|120RSI21[1]|240RSI21[1]|1WRSI21[1]|1M",
        "RSI2RSI2RSI2|1RSI2|5RSI2|15RSI2|30RSI2|60RSI2|120RSI2|240RSI2|1WRSI2|1M",
        "RSI2[1]RSI2[1]RSI2[1]|1RSI2[1]|5RSI2[1]|15RSI2[1]|30RSI2[1]|60RSI2[1]|120RSI2[1]|240RSI2[1]|1WRSI2[1]|1M",
        "RSI30RSI30RSI30|1RSI30|5RSI30|15RSI30|30RSI30|60RSI30|120RSI30|240RSI30|1WRSI30|1M",
        "RSI30[1]RSI30[1]RSI30[1]|1RSI30[1]|5RSI30[1]|15RSI30[1]|30RSI30[1]|60RSI30[1]|120RSI30[1]|240RSI30[1]|1WRSI30[1]|1M",
        "RSI3RSI3RSI3|1RSI3|5RSI3|15RSI3|30RSI3|60RSI3|120RSI3|240RSI3|1WRSI3|1M",
        "RSI3[1]RSI3[1]RSI3[1]|1RSI3[1]|5RSI3[1]|15RSI3[1]|30RSI3[1]|60RSI3[1]|120RSI3[1]|240RSI3[1]|1WRSI3[1]|1M",
        "RSI4RSI4RSI4|1RSI4|5RSI4|15RSI4|30RSI4|60RSI4|120RSI4|240RSI4|1WRSI4|1M",
        "RSI4[1]RSI4[1]RSI4[1]|1RSI4[1]|5RSI4[1]|15RSI4[1]|30RSI4[1]|60RSI4[1]|120RSI4[1]|240RSI4[1]|1WRSI4[1]|1M",
        "RSI5RSI5RSI5|1RSI5|5RSI5|15RSI5|30RSI5|60RSI5|120RSI5|240RSI5|1WRSI5|1M",
        "RSI5[1]RSI5[1]RSI5[1]|1RSI5[1]|5RSI5[1]|15RSI5[1]|30RSI5[1]|60RSI5[1]|120RSI5[1]|240RSI5[1]|1WRSI5[1]|1M",
        "RSI7RSI7RSI7|1RSI7|5RSI7|15RSI7|30RSI7|60RSI7|120RSI7|240RSI7|1WRSI7|1M",
        "RSI7[1]RSI7[1]RSI7[1]|1RSI7[1]|5RSI7[1]|15RSI7[1]|30RSI7[1]|60RSI7[1]|120RSI7[1]|240RSI7[1]|1WRSI7[1]|1M",
        "RSI9RSI9RSI9|1RSI9|5RSI9|15RSI9|30RSI9|60RSI9|120RSI9|240RSI9|1WRSI9|1M",
        "RSI9[1]RSI9[1]RSI9[1]|1RSI9[1]|5RSI9[1]|15RSI9[1]|30RSI9[1]|60RSI9[1]|120RSI9[1]|240RSI9[1]|1WRSI9[1]|1M",
        "RSIRSIRSI|1RSI|5RSI|15RSI|30RSI|60RSI|120RSI|240RSI|1WRSI|1M",
        "RSI[1]RSI[1]RSI[1]|1RSI[1]|5RSI[1]|15RSI[1]|30RSI[1]|60RSI[1]|120RSI[1]|240RSI[1]|1WRSI[1]|1M",
        "Rec.BBPowerRec.BBPowerRec.BBPower|1Rec.BBPower|5Rec.BBPower|15Rec.BBPower|30Rec.BBPower|60Rec.BBPower|120Rec.BBPower|240Rec.BBPower|1WRec.BBPower|1M",
        "Rec.HullMA9Rec.HullMA9Rec.HullMA9|1Rec.HullMA9|5Rec.HullMA9|15Rec.HullMA9|30Rec.HullMA9|60Rec.HullMA9|120Rec.HullMA9|240Rec.HullMA9|1WRec.HullMA9|1M",
        "Rec.IchimokuRec.IchimokuRec.Ichimoku|1Rec.Ichimoku|5Rec.Ichimoku|15Rec.Ichimoku|30Rec.Ichimoku|60Rec.Ichimoku|120Rec.Ichimoku|240Rec.Ichimoku|1WRec.Ichimoku|1M",
        "Rec.Stoch.RSIRec.Stoch.RSIRec.Stoch.RSI|1Rec.Stoch.RSI|5Rec.Stoch.RSI|15Rec.Stoch.RSI|30Rec.Stoch.RSI|60Rec.Stoch.RSI|120Rec.Stoch.RSI|240Rec.Stoch.RSI|1WRec.Stoch.RSI|1M",
        "Rec.UORec.UORec.UO|1Rec.UO|5Rec.UO|15Rec.UO|30Rec.UO|60Rec.UO|120Rec.UO|240Rec.UO|1WRec.UO|1M",
        "Rec.VWMARec.VWMARec.VWMA|1Rec.VWMA|5Rec.VWMA|15Rec.VWMA|30Rec.VWMA|60Rec.VWMA|120Rec.VWMA|240Rec.VWMA|1WRec.VWMA|1M",
        "Rec.WRRec.WRRec.WR|1Rec.WR|5Rec.WR|15Rec.WR|30Rec.WR|60Rec.WR|120Rec.WR|240Rec.WR|1WRec.WR|1M",
        "Recommend.AllRecommend.AllRecommend.All|1Recommend.All|5Recommend.All|15Recommend.All|30Recommend.All|60Recommend.All|120Recommend.All|240Recommend.All|1WRecommend.All|1M",
        "Recommend.MARecommend.MARecommend.MA|1Recommend.MA|5Recommend.MA|15Recommend.MA|30Recommend.MA|60Recommend.MA|120Recommend.MA|240Recommend.MA|1WRecommend.MA|1M",
        "Recommend.OtherRecommend.OtherRecommend.Other|1Recommend.Other|5Recommend.Other|15Recommend.Other|30Recommend.Other|60Recommend.Other|120Recommend.Other|240Recommend.Other|1WRecommend.Other|1M",
        "SMA100SMA100SMA100|1SMA100|5SMA100|15SMA100|30SMA100|60SMA100|120SMA100|240SMA100|1WSMA100|1M",
        "SMA10SMA10SMA10|1SMA10|5SMA10|15SMA10|30SMA10|60SMA10|120SMA10|240SMA10|1WSMA10|1M",
        "SMA120SMA120|1SMA120|5SMA120|15SMA120|30SMA120|60SMA120|120SMA120|240SMA120|1WSMA120|1MSMA120",
        "SMA12SMA12SMA12|1SMA12|5SMA12|15SMA12|30SMA12|60SMA12|120SMA12|240SMA12|1WSMA12|1M",
        "SMA13SMA13SMA13|1SMA13|5SMA13|15SMA13|30SMA13|60SMA13|120SMA13|240SMA13|1WSMA13|1M",
        "SMA144SMA144|1SMA144|5SMA144|15SMA144|30SMA144|60SMA144|120SMA144|240SMA144|1WSMA144|1MSMA144",
        "SMA14SMA14SMA14|1SMA14|5SMA14|15SMA14|30SMA14|60SMA14|120SMA14|240SMA14|1WSMA14|1M",
        "SMA150SMA150|1SMA150|5SMA150|15SMA150|30SMA150|60SMA150|120SMA150|240SMA150|1WSMA150|1MSMA150",
        "SMA15SMA15SMA15|1SMA15|5SMA15|15SMA15|30SMA15|60SMA15|120SMA15|240SMA15|1WSMA15|1M",
        "SMA200SMA200SMA200|1SMA200|5SMA200|15SMA200|30SMA200|60SMA200|120SMA200|240SMA200|1WSMA200|1M",
        "SMA20SMA20SMA20|1SMA20|5SMA20|15SMA20|30SMA20|60SMA20|120SMA20|240SMA20|1WSMA20|1M",
        "SMA21SMA21SMA21|1SMA21|5SMA21|15SMA21|30SMA21|60SMA21|120SMA21|240SMA21|1WSMA21|1M",
        "SMA250SMA250|1SMA250|5SMA250|15SMA250|30SMA250|60SMA250|120SMA250|240SMA250|1WSMA250|1MSMA250",
        "SMA25SMA25SMA25|1SMA25|5SMA25|15SMA25|30SMA25|60SMA25|120SMA25|240SMA25|1WSMA25|1M",
        "SMA26SMA26SMA26|1SMA26|5SMA26|15SMA26|30SMA26|60SMA26|120SMA26|240SMA26|1WSMA26|1M",
        "SMA2SMA2SMA2|1SMA2|5SMA2|15SMA2|30SMA2|60SMA2|120SMA2|240SMA2|1WSMA2|1M",
        "SMA300SMA300|1SMA300|5SMA300|15SMA300|30SMA300|60SMA300|120SMA300|240SMA300|1WSMA300|1MSMA300",
        "SMA30SMA30SMA30|1SMA30|5SMA30|15SMA30|30SMA30|60SMA30|120SMA30|240SMA30|1WSMA30|1M",
        "SMA34SMA34SMA34|1SMA34|5SMA34|15SMA34|30SMA34|60SMA34|120SMA34|240SMA34|1WSMA34|1M",
        "SMA3SMA3SMA3|1SMA3|5SMA3|15SMA3|30SMA3|60SMA3|120SMA3|240SMA3|1WSMA3|1M",
        "SMA40SMA40SMA40|1SMA40|5SMA40|15SMA40|30SMA40|60SMA40|120SMA40|240SMA40|1WSMA40|1M",
        "SMA50SMA50SMA50|1SMA50|5SMA50|15SMA50|30SMA50|60SMA50|120SMA50|240SMA50|1WSMA50|1M",
        "SMA55SMA55|1SMA55|5SMA55|15SMA55|30SMA55|60SMA55|120SMA55|240SMA55|1WSMA55|1MSMA55",
        "SMA5SMA5SMA5|1SMA5|5SMA5|15SMA5|30SMA5|60SMA5|120SMA5|240SMA5|1WSMA5|1M",
        "SMA60SMA60|1SMA60|5SMA60|15SMA60|30SMA60|60SMA60|120SMA60|240SMA60|1WSMA60|1MSMA60",
        "SMA6SMA6SMA6|1SMA6|5SMA6|15SMA6|30SMA6|60SMA6|120SMA6|240SMA6|1WSMA6|1M",
        "SMA75SMA75|1SMA75|5SMA75|15SMA75|30SMA75|60SMA75|120SMA75|240SMA75|1WSMA75|1MSMA75",
        "SMA7SMA7SMA7|1SMA7|5SMA7|15SMA7|30SMA7|60SMA7|120SMA7|240SMA7|1WSMA7|1M",
        "SMA89SMA89|1SMA89|5SMA89|15SMA89|30SMA89|60SMA89|120SMA89|240SMA89|1WSMA89|1MSMA89",
        "SMA8SMA8SMA8|1SMA8|5SMA8|15SMA8|30SMA8|60SMA8|120SMA8|240SMA8|1WSMA8|1M",
        "SMA9SMA9SMA9|1SMA9|5SMA9|15SMA9|30SMA9|60SMA9|120SMA9|240SMA9|1WSMA9|1M",
        "Stoch.DStoch.DStoch.D|1Stoch.D|5Stoch.D|15Stoch.D|30Stoch.D|60Stoch.D|120Stoch.D|240Stoch.D|1WStoch.D|1M",
        "Stoch.D[1]Stoch.D[1]Stoch.D[1]|1Stoch.D[1]|5Stoch.D[1]|15Stoch.D[1]|30Stoch.D[1]|60Stoch.D[1]|120Stoch.D[1]|240Stoch.D[1]|1WStoch.D[1]|1M",
        "Stoch.D_14_1_3Stoch.D_14_1_3Stoch.D_14_1_3|1Stoch.D_14_1_3|5Stoch.D_14_1_3|15Stoch.D_14_1_3|30Stoch.D_14_1_3|60Stoch.D_14_1_3|120Stoch.D_14_1_3|240Stoch.D_14_1_3|1WStoch.D_14_1_3|1M",
        "Stoch.D_14_1_3[1]Stoch.D_14_1_3[1]Stoch.D_14_1_3[1]|1Stoch.D_14_1_3[1]|5Stoch.D_14_1_3[1]|15Stoch.D_14_1_3[1]|30Stoch.D_14_1_3[1]|60Stoch.D_14_1_3[1]|120Stoch.D_14_1_3[1]|240Stoch.D_14_1_3[1]|1WStoch.D_14_1_3[1]|1M",
        "Stoch.D_5_3_3Stoch.D_5_3_3Stoch.D_5_3_3|1Stoch.D_5_3_3|5Stoch.D_5_3_3|15Stoch.D_5_3_3|30Stoch.D_5_3_3|60Stoch.D_5_3_3|120Stoch.D_5_3_3|240Stoch.D_5_3_3|1WStoch.D_5_3_3|1M",
        "Stoch.D_5_3_3[1]Stoch.D_5_3_3[1]Stoch.D_5_3_3[1]|1Stoch.D_5_3_3[1]|5Stoch.D_5_3_3[1]|15Stoch.D_5_3_3[1]|30Stoch.D_5_3_3[1]|60Stoch.D_5_3_3[1]|120Stoch.D_5_3_3[1]|240Stoch.D_5_3_3[1]|1WStoch.D_5_3_3[1]|1M",
        "Stoch.D_6_3_3Stoch.D_6_3_3Stoch.D_6_3_3|1Stoch.D_6_3_3|5Stoch.D_6_3_3|15Stoch.D_6_3_3|30Stoch.D_6_3_3|60Stoch.D_6_3_3|120Stoch.D_6_3_3|240Stoch.D_6_3_3|1WStoch.D_6_3_3|1M",
        "Stoch.D_6_3_3[1]Stoch.D_6_3_3[1]Stoch.D_6_3_3[1]|1Stoch.D_6_3_3[1]|5Stoch.D_6_3_3[1]|15Stoch.D_6_3_3[1]|30Stoch.D_6_3_3[1]|60Stoch.D_6_3_3[1]|120Stoch.D_6_3_3[1]|240Stoch.D_6_3_3[1]|1WStoch.D_6_3_3[1]|1M",
        "Stoch.D_8_3_3Stoch.D_8_3_3Stoch.D_8_3_3|1Stoch.D_8_3_3|5Stoch.D_8_3_3|15Stoch.D_8_3_3|30Stoch.D_8_3_3|60Stoch.D_8_3_3|120Stoch.D_8_3_3|240Stoch.D_8_3_3|1WStoch.D_8_3_3|1M",
        "Stoch.D_8_3_3[1]Stoch.D_8_3_3[1]Stoch.D_8_3_3[1]|1Stoch.D_8_3_3[1]|5Stoch.D_8_3_3[1]|15Stoch.D_8_3_3[1]|30Stoch.D_8_3_3[1]|60Stoch.D_8_3_3[1]|120Stoch.D_8_3_3[1]|240Stoch.D_8_3_3[1]|1WStoch.D_8_3_3[1]|1M",
        "Stoch.KStoch.KStoch.K|1Stoch.K|5Stoch.K|15Stoch.K|30Stoch.K|60Stoch.K|120Stoch.K|240Stoch.K|1WStoch.K|1M",
        "Stoch.K[1]Stoch.K[1]Stoch.K[1]|1Stoch.K[1]|5Stoch.K[1]|15Stoch.K[1]|30Stoch.K[1]|60Stoch.K[1]|120Stoch.K[1]|240Stoch.K[1]|1WStoch.K[1]|1M",
        "Stoch.K_14_1_3Stoch.K_14_1_3Stoch.K_14_1_3|1Stoch.K_14_1_3|5Stoch.K_14_1_3|15Stoch.K_14_1_3|30Stoch.K_14_1_3|60Stoch.K_14_1_3|120Stoch.K_14_1_3|240Stoch.K_14_1_3|1WStoch.K_14_1_3|1M",
        "Stoch.K_14_1_3[1]Stoch.K_14_1_3[1]Stoch.K_14_1_3[1]|1Stoch.K_14_1_3[1]|5Stoch.K_14_1_3[1]|15Stoch.K_14_1_3[1]|30Stoch.K_14_1_3[1]|60Stoch.K_14_1_3[1]|120Stoch.K_14_1_3[1]|240Stoch.K_14_1_3[1]|1WStoch.K_14_1_3[1]|1M",
        "Stoch.K_5_3_3Stoch.K_5_3_3Stoch.K_5_3_3|1Stoch.K_5_3_3|5Stoch.K_5_3_3|15Stoch.K_5_3_3|30Stoch.K_5_3_3|60Stoch.K_5_3_3|120Stoch.K_5_3_3|240Stoch.K_5_3_3|1WStoch.K_5_3_3|1M",
        "Stoch.K_5_3_3[1]Stoch.K_5_3_3[1]Stoch.K_5_3_3[1]|1Stoch.K_5_3_3[1]|5Stoch.K_5_3_3[1]|15Stoch.K_5_3_3[1]|30Stoch.K_5_3_3[1]|60Stoch.K_5_3_3[1]|120Stoch.K_5_3_3[1]|240Stoch.K_5_3_3[1]|1WStoch.K_5_3_3[1]|1M",
        "Stoch.K_6_3_3Stoch.K_6_3_3Stoch.K_6_3_3|1Stoch.K_6_3_3|5Stoch.K_6_3_3|15Stoch.K_6_3_3|30Stoch.K_6_3_3|60Stoch.K_6_3_3|120Stoch.K_6_3_3|240Stoch.K_6_3_3|1WStoch.K_6_3_3|1M",
        "Stoch.K_6_3_3[1]Stoch.K_6_3_3[1]Stoch.K_6_3_3[1]|1Stoch.K_6_3_3[1]|5Stoch.K_6_3_3[1]|15Stoch.K_6_3_3[1]|30Stoch.K_6_3_3[1]|60Stoch.K_6_3_3[1]|120Stoch.K_6_3_3[1]|240Stoch.K_6_3_3[1]|1WStoch.K_6_3_3[1]|1M",
        "Stoch.K_8_3_3Stoch.K_8_3_3Stoch.K_8_3_3|1Stoch.K_8_3_3|5Stoch.K_8_3_3|15Stoch.K_8_3_3|30Stoch.K_8_3_3|60Stoch.K_8_3_3|120Stoch.K_8_3_3|240Stoch.K_8_3_3|1WStoch.K_8_3_3|1M",
        "Stoch.K_8_3_3[1]Stoch.K_8_3_3[1]Stoch.K_8_3_3[1]|1Stoch.K_8_3_3[1]|5Stoch.K_8_3_3[1]|15Stoch.K_8_3_3[1]|30Stoch.K_8_3_3[1]|60Stoch.K_8_3_3[1]|120Stoch.K_8_3_3[1]|240Stoch.K_8_3_3[1]|1WStoch.K_8_3_3[1]|1M",
        "Stoch.RSI.DStoch.RSI.DStoch.RSI.D|1Stoch.RSI.D|5Stoch.RSI.D|15Stoch.RSI.D|30Stoch.RSI.D|60Stoch.RSI.D|120Stoch.RSI.D|240Stoch.RSI.D|1WStoch.RSI.D|1M",
        "Stoch.RSI.KStoch.RSI.KStoch.RSI.K|1Stoch.RSI.K|5Stoch.RSI.K|15Stoch.RSI.K|30Stoch.RSI.K|60Stoch.RSI.K|120Stoch.RSI.K|240Stoch.RSI.K|1WStoch.RSI.K|1M",
        "UOUOUO|1UO|5UO|15UO|30UO|60UO|120UO|240UO|1WUO|1M",
        "VWAPVWAPVWAP|1VWAP|5VWAP|15VWAP|30VWAP|60VWAP|120VWAP|240VWAP|1WVWAP|1M",
        "VWMAVWMAVWMA|1VWMA|5VWMA|15VWMA|30VWMA|60VWMA|120VWMA|240VWMA|1WVWMA|1M",
        "Value.TradedValue.TradedValue.Traded|1Value.Traded|5Value.Traded|15Value.Traded|30Value.Traded|60Value.Traded|120Value.Traded|240Value.Traded|1WValue.Traded|1M",
        "Volatility.D",
        "Volatility.M",
        "Volatility.W",
        "W.RW.RW.R|1W.R|5W.R|15W.R|30W.R|60W.R|120W.R|240W.R|1WW.R|1M",
        "asset_turnover_current",
        "asset_turnover_fy",
        "aum_perf.1M",
        "aum_perf.1Y",
        "aum_perf.3M",
        "aum_perf.3Y",
        "aum_perf.5Y",
        "aum_perf.YTD",
        "average_volume",
        "average_volume_10d_calcaverage_volume_10d_calcaverage_volume_10d_calc|1average_volume_10d_calc|5average_volume_10d_calc|15average_volume_10d_calc|30average_volume_10d_calc|60average_volume_10d_calc|120average_volume_10d_calc|240average_volume_10d_calc|1Waverage_volume_10d_calc|1M",
        "average_volume_30d_calcaverage_volume_30d_calcaverage_volume_30d_calc|1average_volume_30d_calc|5average_volume_30d_calc|15average_volume_30d_calc|30average_volume_30d_calc|60average_volume_30d_calc|120average_volume_30d_calc|240average_volume_30d_calc|1Waverage_volume_30d_calc|1M",
        "average_volume_60d_calcaverage_volume_60d_calcaverage_volume_60d_calc|1average_volume_60d_calc|5average_volume_60d_calc|15average_volume_60d_calc|30average_volume_60d_calc|60average_volume_60d_calc|120average_volume_60d_calc|240average_volume_60d_calc|1Waverage_volume_60d_calc|1M",
        "average_volume_90d_calcaverage_volume_90d_calcaverage_volume_90d_calc|1average_volume_90d_calc|5average_volume_90d_calc|15average_volume_90d_calc|30average_volume_90d_calc|60average_volume_90d_calc|120average_volume_90d_calc|240average_volume_90d_calc|1Waverage_volume_90d_calc|1M",
        "bars_countbars_countbars_count|1bars_count|5bars_count|15bars_count|30bars_count|60bars_count|120bars_count|240bars_count|1Wbars_count|1M",
        "beta_1_year",
        "beta_3_year",
        "beta_5_year",
        "capital_expenditures_unchanged_fq_h",
        "capital_expenditures_unchanged_fy_h",
        "capital_expenditures_unchanged_ttm_h",
        "cash_dividend_coverage_ratio_fy",
        "cash_dividend_coverage_ratio_ttm",
        "cash_n_short_term_invest_to_total_current_liabilities_fq",
        "cash_n_short_term_invest_to_total_current_liabilities_fy",
        "cash_n_short_term_invest_to_total_debt_fq",
        "cash_n_short_term_invest_to_total_debt_fy",
        "cash_ratio",
        "continuous_dividend_growth",
        "continuous_dividend_payout",
        "coupon",
        "current_ratio",
        "current_ratio_current",
        "current_ratio_fq",
        "days_to_maturity",
        "debt_to_asset_fq",
        "debt_to_asset_fy",
        "debt_to_assets",
        "debt_to_equity",
        "debt_to_equity_fq",
        "dividend_yield_recent",
        "dividend_yield_upcoming",
        "dividends_yield",
        "dps_common_stock_prim_issue_fy_h",
        "earnings_per_share_basic_fy_h",
        "earnings_per_share_diluted_fq_h",
        "earnings_per_share_diluted_fy_h",
        "earnings_per_share_diluted_ttm_h",
        "earnings_publication_type_fq",
        "earnings_publication_type_next_fq",
        "earnings_release_next_time",
        "earnings_release_time",
        "ebitda_fq_h",
        "ebitda_fy_h",
        "ebitda_interst_cover_fy",
        "ebitda_interst_cover_ttm",
        "ebitda_less_capex_interst_cover_fy",
        "ebitda_less_capex_interst_cover_ttm",
        "ebitda_ttm_h",
        "enterprise_value_ebitda_current",
        "enterprise_value_ebitda_ttm",
        "enterprise_value_to_ebit_ttm",
        "enterprise_value_to_free_cash_flow_ttm",
        "enterprise_value_to_gross_profit_ttm",
        "enterprise_value_to_revenue_ttm",
        "expected_annual_dividends",
        "expense_ratio",
        "fiscal_period_end_fh_h",
        "fiscal_period_fy_h",
        "fixed_assets_turnover_fq",
        "fixed_assets_turnover_fy",
        "float_shares_outstanding",
        "float_shares_outstanding_current",
        "free_cash_flow_fq_h",
        "free_cash_flow_fy_h",
        "free_cash_flow_ttm_h",
        "gross_profit_fq_h",
        "gross_profit_fy_h",
        "gross_profit_ttm_h",
        "index_priority",
        "indexes",
        "indicators_bars_countindicators_bars_countindicators_bars_count|1indicators_bars_count|5indicators_bars_count|15indicators_bars_count|30indicators_bars_count|60indicators_bars_count|120indicators_bars_count|240indicators_bars_count|1Windicators_bars_count|1M",
        "interst_cover_fy",
        "interst_cover_ttm",
        "invent_turnover_current",
        "invent_turnover_fy",
        "inverse_flag",
        "last_bar_update_timelast_bar_update_timelast_bar_update_time|1last_bar_update_time|5last_bar_update_time|15last_bar_update_time|30last_bar_update_time|60last_bar_update_time|120last_bar_update_time|240last_bar_update_time|1Wlast_bar_update_time|1M",
        "last_report_frequency",
        "long_term_capital",
        "long_term_debt_to_assets_fq",
        "long_term_debt_to_assets_fy",
        "long_term_debt_to_equity_fq",
        "market_cap_calc",
        "minmov",
        "minmove2",
        "nav_discount_premium",
        "nav_perf.1M",
        "nav_perf.1Y",
        "nav_perf.3M",
        "nav_perf.3Y",
        "nav_perf.5Y",
        "nav_perf.YTD",
        "nav_total_return.1M",
        "nav_total_return.1Y",
        "nav_total_return.3M",
        "nav_total_return.3Y",
        "nav_total_return.5Y",
        "nav_total_return.6M",
        "nav_total_return.YTD",
        "net_debt_to_ebitda_fq",
        "net_debt_to_ebitda_fy",
        "net_income_fq_h",
        "net_income_fy_h",
        "net_income_ttm_h",
        "non_gaap_price_to_earnings_per_share_forecast_next_fy",
        "number_of_employees",
        "number_of_employees_fy",
        "number_of_shareholders",
        "number_of_shareholders_fy",
        "postmarket_volume",
        "preferred_dividends",
        "premarket_change_from_open_abs",
        "premarket_volume",
        "price_52_week_high",
        "price_52_week_low",
        "price_annual_book",
        "price_annual_sales",
        "price_book_current",
        "price_book_fq",
        "price_book_ratio",
        "price_cash_flow_current",
        "price_earnings_current",
        "price_earnings_forward_fy",
        "price_earnings_growth_ttm",
        "price_earnings_ttm",
        "price_free_cash_flow_current",
        "price_free_cash_flow_ttm",
        "price_revenue_ttm",
        "price_sales_current",
        "price_sales_ratio",
        "price_target_average",
        "price_target_high",
        "price_target_low",
        "price_target_median",
        "price_to_cash_f_operating_activities_ttm",
        "price_to_cash_ratio",
        "price_to_working_capital_fq",
        "pricescale",
        "quick_ratio",
        "quick_ratio_current",
        "quick_ratio_fq",
        "receivables_turnover_fq",
        "receivables_turnover_fy",
        "recommendation_buy",
        "recommendation_hold",
        "recommendation_mark",
        "recommendation_over",
        "recommendation_sell",
        "recommendation_total",
        "recommendation_under",
        "relative_volume",
        "relative_volume_10d_calcrelative_volume_10d_calcrelative_volume_10d_calc|1relative_volume_10d_calc|5relative_volume_10d_calc|15relative_volume_10d_calc|30relative_volume_10d_calc|60relative_volume_10d_calc|120relative_volume_10d_calc|240relative_volume_10d_calc|1Wrelative_volume_10d_calc|1M",
        "relative_volume_intraday|5",
        "shrhldrs_equity_to_total_assets_fq",
        "shrhldrs_equity_to_total_assets_fy",
        "time_business_day",
        "total_assets_fq_h",
        "total_assets_fy_h",
        "total_assets_to_equity_fq",
        "total_assets_to_equity_fy",
        "total_capital",
        "total_debt_fq_h",
        "total_debt_fy_h",
        "total_debt_to_capital_fq",
        "total_debt_to_capital_fy",
        "total_debt_to_ebitda_fq",
        "total_debt_to_ebitda_fy",
        "total_revenue_fq_h",
        "total_revenue_fy_h",
        "total_revenue_ttm_h",
        "total_shares_outstanding",
        "total_shares_outstanding_calculated",
        "total_shares_outstanding_current",
        "total_shares_outstanding_fundamental",
        "update-time",
        "volume_change_absvolume_change_absvolume_change_abs|1volume_change_abs|5volume_change_abs|15volume_change_abs|30volume_change_abs|60volume_change_abs|120volume_change_abs|240volume_change_abs|1Wvolume_change_abs|1M",
        "volumevolumevolume|1volume|5volume|15volume|30volume|60volume|120volume|240volume|1Wvolume|1M",
        "yield_recent",
        "yield_upcoming",
    ],
    "percent": [
        "after_tax_margin",
        "cagr_5_earnings_per_share_basic",
        "cagr_5_free_cash_flow",
        "cagr_5_net_income",
        "cagr_5_revenue",
        "capital_expenditures_qoq_growth_fq",
        "capital_expenditures_yoy_growth_fq",
        "capital_expenditures_yoy_growth_fy",
        "capital_expenditures_yoy_growth_ttm",
        "change_from_openchange_from_openchange_from_open|1change_from_open|5change_from_open|15change_from_open|30change_from_open|60change_from_open|120change_from_open|240change_from_open|1Wchange_from_open|1M",
        "changechangechange|1change|5change|15change|30change|60change|120change|240change|1Wchange|1M",
        "dividend_payout_ratio_percent_fq",
        "dividend_payout_ratio_percent_fy",
        "dividend_payout_ratio_ttm",
        "dividends_yield_current",
        "dividends_yield_fq",
        "dividends_yield_fy",
        "dps_common_stock_prim_issue_yoy_growth_fy",
        "earnings_per_share_diluted_5y_growth_fy",
        "earnings_per_share_diluted_qoq_growth_fq",
        "earnings_per_share_diluted_yoy_growth_fq",
        "earnings_per_share_diluted_yoy_growth_fy",
        "earnings_per_share_diluted_yoy_growth_ttm",
        "ebitda_qoq_growth_fq",
        "ebitda_yoy_growth_fq",
        "ebitda_yoy_growth_fy",
        "ebitda_yoy_growth_ttm",
        "eps_diluted_growth_percent_fq",
        "eps_diluted_growth_percent_fy",
        "eps_surprise_percent_fq",
        "float_shares_percent_current",
        "free_cash_flow_margin_fy",
        "free_cash_flow_margin_ttm",
        "free_cash_flow_qoq_growth_fq",
        "free_cash_flow_yoy_growth_fq",
        "free_cash_flow_yoy_growth_fy",
        "free_cash_flow_yoy_growth_ttm",
        "gap_downgap_downgap_down|1gap_down|5gap_down|15gap_down|30gap_down|60gap_down|120gap_down|240gap_down|1Wgap_down|1M",
        "gap_upgap_upgap_up|1gap_up|5gap_up|15gap_up|30gap_up|60gap_up|120gap_up|240gap_up|1Wgap_up|1M",
        "gapgapgap|1gap|5gap|15gap|30gap|60gap|120gap|240gap|1Wgap|1M",
        "gross_margin",
        "gross_margin_fy",
        "gross_margin_percent_ttm",
        "gross_margin_ttm",
        "gross_profit_margin_fy",
        "gross_profit_qoq_growth_fq",
        "gross_profit_yoy_growth_fq",
        "gross_profit_yoy_growth_fy",
        "gross_profit_yoy_growth_ttm",
        "low_after_high_all_change",
        "net_income_bef_disc_oper_margin_fy",
        "net_income_qoq_growth_fq",
        "net_income_yoy_growth_fq",
        "net_income_yoy_growth_fy",
        "net_income_yoy_growth_ttm",
        "net_margin",
        "net_margin_fy",
        "net_margin_ttm",
        "oper_income_margin_fy",
        "operating_margin",
        "operating_margin_fy",
        "operating_margin_ttm",
        "post_changepost_changepost_change|1post_change|5post_change|15post_change|30post_change|60post_change|120post_change|240post_change|1Wpost_change|1M",
        "postmarket_change",
        "pre_changepre_changepre_change|1pre_change|5pre_change|15pre_change|30pre_change|60pre_change|120pre_change|240pre_change|1Wpre_change|1M",
        "pre_tax_margin",
        "pre_tax_margin_ttm",
        "premarket_change",
        "premarket_change_from_open",
        "premarket_gap",
        "price_target_1y_delta",
        "research_and_dev_ratio_fy",
        "research_and_dev_ratio_ttm",
        "return_of_invested_capital_percent_ttm",
        "return_on_assets",
        "return_on_assets_fq",
        "return_on_assets_fy",
        "return_on_capital_employed_fq",
        "return_on_capital_employed_fy",
        "return_on_equity",
        "return_on_equity_fq",
        "return_on_equity_fy",
        "return_on_invested_capital",
        "return_on_invested_capital_fq",
        "return_on_invested_capital_fy",
        "return_on_tang_assets_fq",
        "return_on_tang_assets_fy",
        "return_on_tang_equity_fq",
        "return_on_tang_equity_fy",
        "return_on_total_capital_fq",
        "return_on_total_capital_fy",
        "revenue_surprise_percent_fq",
        "sell_gen_admin_exp_other_ratio_fy",
        "sell_gen_admin_exp_other_ratio_ttm",
        "total_assets_qoq_growth_fq",
        "total_assets_yoy_growth_fq",
        "total_assets_yoy_growth_fy",
        "total_debt_qoq_growth_fq",
        "total_debt_yoy_growth_fq",
        "total_debt_yoy_growth_fy",
        "total_revenue_5y_growth_fy",
        "total_revenue_qoq_growth_fq",
        "total_revenue_yoy_growth_fq",
        "total_revenue_yoy_growth_fy",
        "total_revenue_yoy_growth_ttm",
        "volume_changevolume_changevolume_change|1volume_change|5volume_change|15volume_change|30volume_change|60volume_change|120volume_change|240volume_change|1Wvolume_change|1M",
        "weight_top_10",
        "weight_top_25",
        "weight_top_50",
    ],
    "price": [
        "Low.After.High.All",
        "all_time_high",
        "all_time_low",
        "all_time_open",
        "change_abschange_abschange_abs|1change_abs|5change_abs|15change_abs|30change_abs|60change_abs|120change_abs|240change_abs|1Wchange_abs|1M",
        "change_from_open_abschange_from_open_abschange_from_open_abs|1change_from_open_abs|5change_from_open_abs|15change_from_open_abs|30change_from_open_abs|60change_from_open_abs|120change_from_open_abs|240change_from_open_abs|1Wchange_from_open_abs|1M",
        "closecloseclose|1close|5close|15close|30close|60close|120close|240close|1Wclose|1M",
        "gap_down_absgap_down_absgap_down_abs|1gap_down_abs|5gap_down_abs|15gap_down_abs|30gap_down_abs|60gap_down_abs|120gap_down_abs|240gap_down_abs|1Wgap_down_abs|1M",
        "gap_up_absgap_up_absgap_up_abs|1gap_up_abs|5gap_up_abs|15gap_up_abs|30gap_up_abs|60gap_up_abs|120gap_up_abs|240gap_up_abs|1Wgap_up_abs|1M",
        "highhighhigh|1high|5high|15high|30high|60high|120high|240high|1Whigh|1M",
        "low_after_high_all_change_abs",
        "lowlowlow|1low|5low|15low|30low|60low|120low|240low|1Wlow|1M",
        "openopenopen|1open|5open|15open|30open|60open|120open|240open|1Wopen|1M",
        "postmarket_change_abs",
        "postmarket_close",
        "postmarket_high",
        "postmarket_low",
        "postmarket_open",
        "pre_change_abspre_change_abspre_change_abs|1pre_change_abs|5pre_change_abs|15pre_change_abs|30pre_change_abs|60pre_change_abs|120pre_change_abs|240pre_change_abs|1Wpre_change_abs|1M",
        "premarket_change_abs",
        "premarket_close",
        "premarket_high",
        "premarket_low",
        "premarket_open",
        "price_sales",
        "price_target_1y",
        "rtc",
    ],
    "set": [
        "typespecs",
    ],
    "string": [
        "actively_managed",
        "asset_class",
        "base_currency_kind",
        "brand",
        "category",
        "country",
        "country_code_fund",
        "cryptoasset-info.description",
        "cryptoasset-info.id",
        "currency",
        "currency_hedged_flag",
        "currency_id",
        "currency_kind",
        "current_session",
        "description",
        "dividend_frequency_recent",
        "dividend_frequency_upcoming",
        "dividend_treatment",
        "dividends_frequency",
        "etf_fund_currency",
        "exchange",
        "focus",
        "fractional",
        "frequency_recent",
        "frequency_upcoming",
        "fundamental_currency_code",
        "holdings_region",
        "holds_derivatives_flag",
        "index",
        "index_id",
        "index_provider",
        "industry",
        "issuer",
        "k1_form",
        "leverage",
        "leverage_ratio",
        "leveraged_flag",
        "logoid",
        "market",
        "name",
        "niche",
        "provider-id",
        "sector",
        "selection_criteria",
        "source-logoid",
        "strategy",
        "submarket",
        "subtype",
        "top_revenue_country_code",
        "transparent_holding_flag",
        "type",
        "ucits_compliant_flag",
        "update_modeupdate_modeupdate_mode|1update_mode|5update_mode|15update_mode|30update_mode|60update_mode|120update_mode|240update_mode|1Wupdate_mode|1M",
        "weighting_scheme",
    ],
    "time": [
        "High.1M.Date",
        "High.3M.Date",
        "High.6M.Date",
        "High.All.Calc.Date",
        "High.All.Date",
        "Low.1M.Date",
        "Low.3M.Date",
        "Low.6M.Date",
        "Low.All.Calc.Date",
        "Low.All.Date",
        "all_time_high_day",
        "all_time_low_day",
        "dividend_ex_date_recent",
        "dividend_ex_date_upcoming",
        "dividend_payment_date_recent",
        "dividend_payment_date_upcoming",
        "earnings_release_calendar_date",
        "earnings_release_date",
        "earnings_release_next_calendar_date",
        "earnings_release_next_date",
        "earnings_release_next_trading_date_fq",
        "earnings_release_next_trading_date_fy",
        "earnings_release_trading_date_fq",
        "earnings_release_trading_date_fy",
        "ex_dividend_date_recent",
        "ex_dividend_date_upcoming",
        "expiration",
        "first_bar_time",
        "fiscal_period_end_fh",
        "fiscal_period_end_fq",
        "launch_date",
        "most_recent_quarter_date",
        "next_dividend_date",
        "payment_date_recent",
        "payment_date_upcoming",
        "postmarket_time",
        "premarket_time",
        "price_52_week_high_date",
        "price_52_week_low_date",
        "timetimetime|1time|5time|15time|30time|60time|120time|240time|1Wtime|1M",
        "update_time",
    ],
    "time-yyyymmdd": [
        "maturity_date",
    ],

}

# Flat set of all valid fields for quick lookup
VALID_FIELDS: Set[str] = set()
for field_list in FIELDS_BY_TYPE.values():
    VALID_FIELDS.update(field_list)

# Reverse mapping: field name -> type
FIELD_TYPE_MAP: Dict[str, str] = {}
for field_type, field_list in FIELDS_BY_TYPE.items():
    for field_name in field_list:
        FIELD_TYPE_MAP[field_name] = field_type


def validate_field(field_name: str) -> bool:
    """
    Check if a field name is valid for TradingView screeners

    Args:
        field_name: Field name to validate

    Returns:
        True if field is valid, False otherwise
    """
    return field_name in VALID_FIELDS


def get_field_type(field_name: str) -> Optional[str]:
    """
    Get the type of a TradingView field

    Args:
        field_name: Field name to look up

    Returns:
        Field type string or None if field not found
    """
    return FIELD_TYPE_MAP.get(field_name)


def get_fields_by_type(field_type: str) -> List[str]:
    """
    Get all fields of a specific type

    Args:
        field_type: Type to search for

    Returns:
        List of field names of that type
    """
    return FIELDS_BY_TYPE.get(field_type, [])


def get_numeric_fields() -> List[str]:
    """Get all numeric fields suitable for range/comparison filters"""
    return get_fields_by_type('number')


def get_string_fields() -> List[str]:
    """Get all string fields suitable for text/equality filters"""
    return get_fields_by_type('string')


def suggest_similar_fields(field_name: str, max_suggestions: int = 5) -> List[str]:
    """
    Suggest similar field names for typos/partial matches

    Args:
        field_name: Partial or misspelled field name
        max_suggestions: Maximum number of suggestions

    Returns:
        List of similar field names
    """
    field_lower = field_name.lower()
    suggestions = []

    # Exact substring matches first
    for valid_field in VALID_FIELDS:
        if field_lower in valid_field.lower():
            suggestions.append(valid_field)

    # Partial matches
    if len(suggestions) < max_suggestions:
        for valid_field in VALID_FIELDS:
            if any(part in valid_field.lower() for part in field_lower.split('_')):
                if valid_field not in suggestions:
                    suggestions.append(valid_field)

    return suggestions[:max_suggestions]


# Statistics
TOTAL_FIELDS = len(VALID_FIELDS)
FIELD_TYPE_COUNTS = {field_type: len(fields) for field_type, fields in FIELDS_BY_TYPE.items()}

if __name__ == "__main__":
    print(f"TradingView Field Validator")
    print(f"Total fields: {TOTAL_FIELDS}")
    print(f"Field types: {list(FIELDS_BY_TYPE.keys())}")

    # Test validation
    test_fields = ['close', 'volume', 'invalid_field', 'market_cap_basic']
    for field in test_fields:
        is_valid = validate_field(field)
        field_type = get_field_type(field)
        print(f"  {field}: {'✅' if is_valid else '❌'} ({field_type or 'unknown'})")
